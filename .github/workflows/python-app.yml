name: Build and Release
on:
  push:
    branches: ["main"]  # 当推送到 main 分支时触发
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            artifact_name: macos
            build_command: pyinstaller --onefile free_cursor.py
          - os: ubuntu-latest
            artifact_name: linux
            build_command: pyinstaller --onefile free_cursor.py
          - os: windows-latest
            artifact_name: windows
            build_command: pyinstaller --onefile free_cursor.py

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build executable
        run: ${{ matrix.build_command }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-build
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Create Git tag
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}  # 使用 PAT
        with:
          script: |
            const version = "${{ steps.version.outputs.version }}";
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${version}`,
              sha: context.sha
            });

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
